module.exports = {
	extends: [
		require.resolve('eslint-config-prettier'),
	],

	plugins: ['prettier', 'import', 'jsx-a11y', 'react', 'react-hooks'],

	env: {
		commonjs: true,
		es6: true,
		node: true,
		browser: true,
	},

	parser: 'babel-eslint',

	parserOptions: {
		ecmaVersion: 6,
		sourceType: 'module',
		ecmaFeatures: {
			jsx: true,
			generators: true,
		},
	},

	settings: {
		'import/resolver': {
			node: {
				extensions: ['.js', '.ts', '.tsx'],
			},
		},
		react: {
			version: 'detect'
		}
	},

	rules: {
		'array-callback-return': 'warn',
		'default-case': ['warn', { commentPattern: '^no default$' }],
		eqeqeq: ['warn', 'allow-null'],
		'no-array-constructor': 'warn',
		'no-caller': 'warn',
		curly: 'warn',
		'no-const-assign': 'warn',
		'no-control-regex': 'warn',
		'no-delete-var': 'warn',
		'no-dupe-args': 'warn',
		'no-dupe-class-members': 'warn',
		'no-dupe-keys': 'warn',
		'no-duplicate-case': 'warn',
		'no-empty-character-class': 'warn',
		'no-empty-pattern': 'warn',
		'no-eval': 'warn',
		'no-ex-assign': 'warn',
		'no-extend-native': 'warn',
		'no-extra-bind': 'warn',
		'no-extra-label': 'warn',
		'no-fallthrough': 'warn',
		'no-func-assign': 'warn',
		'no-implied-eval': 'warn',
		'no-invalid-regexp': 'warn',
		'no-iterator': 'warn',
		'no-label-var': 'warn',
		'no-labels': ['warn', { allowLoop: true, allowSwitch: false }],
		'no-lone-blocks': 'warn',
		'no-loop-func': 'warn',
		'no-multi-str': 'warn',
		'no-native-reassign': 'warn',
		'no-negated-in-lhs': 'warn',
		'no-new-func': 'warn',
		'no-new-object': 'warn',
		'no-new-symbol': 'warn',
		'no-new-wrappers': 'warn',
		'no-obj-calls': 'warn',
		'no-octal': 'warn',
		'no-octal-escape': 'warn',
		'no-redeclare': 'warn',
		'no-regex-spaces': 'warn',
		'no-restricted-syntax': ['warn', 'WithStatement', 'SequenceExpression'],
		'no-script-url': 'warn',
		'no-self-assign': 'warn',
		'no-self-compare': 'warn',
		'no-sequences': 'warn',
		'no-shadow': 'warn',
		'no-shadow-restricted-names': 'warn',
		'no-sparse-arrays': 'warn',
		'no-template-curly-in-string': 'warn',
		'no-this-before-super': 'warn',
		'no-throw-literal': 'warn',
		'prefer-promise-reject-errors': 'warn',
		'no-undef': 'error',
		'no-restricted-globals': ['error'],
		'no-unreachable': 'warn',
		'no-unused-expressions': [
			'error',
			{
				allowShortCircuit: true,
				allowTernary: true,
				allowTaggedTemplates: true,
			},
		],
		'no-unused-labels': 'warn',
		'no-unused-vars': [
			'warn',
			{
				args: 'after-used',
				ignoreRestSiblings: true,
			},
		],
		'no-useless-computed-key': 'warn',
		'no-useless-concat': 'warn',
		'no-useless-constructor': 'warn',
		'no-useless-escape': 'warn',
		'no-useless-rename': [
			'warn',
			{
				ignoreDestructuring: false,
				ignoreImport: false,
				ignoreExport: false,
			},
		],
		'no-var': 'warn',
		'no-with': 'warn',
		'prefer-const': 'warn',
		'require-yield': 'warn',
		strict: ['warn', 'never'],
		'use-isnan': 'warn',
		'valid-typeof': 'warn',
		'getter-return': 'warn',
		'no-cond-assign': ['error', 'always'],
		'constructor-super': 'error',
		'no-return-await': 'error',
		'dot-notation': 'error',
		'no-unsafe-finally': 'error',
		'prefer-object-spread': 'error',
		radix: 'error',
		'no-undef-init': 'error',
		'object-shorthand': 'error',
		'no-constant-condition': 'error',
		'no-extra-boolean-cast': 'error',
		'no-proto': 'error',
		'no-irregular-whitespace': 'error',
		'no-use-before-define': [
			'warn',
			{
				functions: false,
				classes: false,
				variables: false,
			},
		],'import/no-unresolved': ['error', { commonjs: true, caseSensitive: true }],
		'import/no-amd': 'error',
		'import/no-duplicates': 'error',
		'import/newline-after-import': 'error',
		'import/no-absolute-path': 'error',
		'import/no-useless-path-segments': 'error',
		'import/no-extraneous-dependencies': 'error',
		'spaced-comment': ['warn', 'always', { markers: ['/'] }],
		'prettier/prettier': [
			'warn',
			{
				singleQuote: true,
				trailingComma: 'all',
			},
		],
	},

	overrides: [
		{
			files: ['*.ts', '*.tsx'],
			parser: '@typescript-eslint/parser',
			parserOptions: {
				ecmaVersion: 2018,
				sourceType: 'module',
			},

			plugins: ['@typescript-eslint'],

			rules: {
				'default-case': 'off',
				'no-dupe-class-members': 'off',
				'no-undef': 'off',
				'import/no-unresolved': 'off',

				'no-shadow': 'off',
				'@typescript-eslint/no-shadow': 'warn',
				'no-array-constructor': 'off',
				'@typescript-eslint/no-array-constructor': 'warn',
				'no-redeclare': 'off',
				'@typescript-eslint/no-redeclare': 'warn',
				'no-use-before-define': 'off',
				'@typescript-eslint/no-use-before-define': [
					'warn',
					{
						functions: false,
						classes: false,
						variables: false,
						typedefs: false,
					},
				],
				'no-unused-expressions': 'off',
				'@typescript-eslint/no-unused-expressions': [
					'error',
					{
						allowShortCircuit: true,
						allowTernary: true,
						allowTaggedTemplates: true,
					},
				],
				'no-unused-vars': 'off',
				'@typescript-eslint/no-unused-vars': [
					'warn',
					{
						args: 'none',
						ignoreRestSiblings: true,
					},
				],
				'no-useless-constructor': 'off',
				'@typescript-eslint/no-useless-constructor': 'error',
				'@typescript-eslint/consistent-type-assertions': 'error',
				'@typescript-eslint/adjacent-overload-signatures': 'error',
				'@typescript-eslint/no-namespace': 'error',
				'@typescript-eslint/triple-slash-reference': 'error',
				'@typescript-eslint/prefer-for-of': 'error',
				'@typescript-eslint/no-dynamic-delete': 'error',
				'@typescript-eslint/no-misused-new': 'error',
				'@typescript-eslint/array-type': ['error', { default: 'array' }],
				'@typescript-eslint/prefer-function-type': 'error',
				'@typescript-eslint/member-delimiter-style': 'error',
				'@typescript-eslint/prefer-ts-expect-error': 'warn',
				'@typescript-eslint/ban-tslint-comment': 'warn',

				'react/forbid-foreign-prop-types': ['warn', { allowInPropTypes: true }],
				'react/jsx-no-comment-textnodes': 'warn',
				'react/jsx-no-duplicate-props': ['warn', { ignoreCase: true }],
				'react/jsx-no-target-blank': 'warn',
				'react/jsx-no-undef': 'error',
				'react/jsx-pascal-case': [
					'warn',
					{
						allowAllCaps: true,
						ignore: [],
					},
				],
				'react/jsx-uses-react': 'warn',
				'react/jsx-uses-vars': 'warn',
				'react/no-danger-with-children': 'warn',
				'react/no-deprecated': 'warn',
				'react/no-direct-mutation-state': 'warn',
				'react/no-is-mounted': 'warn',
				'react/react-in-jsx-scope': 'error',
				'react/require-render-return': 'error',
				'react/style-prop-object': 'warn',
				'react/jsx-curly-brace-presence': 'warn',
				'react/no-typos': 'error',

				'jsx-a11y/accessible-emoji': 'warn',
				'jsx-a11y/alt-text': 'warn',
				'jsx-a11y/anchor-has-content': 'warn',
				'jsx-a11y/anchor-is-valid': [
					'warn',
					{
						aspects: ['noHref', 'invalidHref'],
					},
				],
				'jsx-a11y/aria-activedescendant-has-tabindex': 'warn',
				'jsx-a11y/aria-props': 'warn',
				'jsx-a11y/aria-proptypes': 'warn',
				'jsx-a11y/aria-role': 'warn',
				'jsx-a11y/aria-unsupported-elements': 'warn',
				'jsx-a11y/heading-has-content': 'warn',
				'jsx-a11y/iframe-has-title': 'warn',
				'jsx-a11y/img-redundant-alt': 'warn',
				'jsx-a11y/no-access-key': 'warn',
				'jsx-a11y/no-distracting-elements': 'warn',
				'jsx-a11y/no-redundant-roles': 'warn',
				'jsx-a11y/role-has-required-aria-props': 'warn',
				'jsx-a11y/role-supports-aria-props': 'warn',
				'jsx-a11y/scope': 'warn',

				'react-hooks/rules-of-hooks': 'error',
				'react-hooks/exhaustive-deps': 'warn',
			},
		},
	],
};
